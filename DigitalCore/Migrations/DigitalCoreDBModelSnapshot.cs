// <auto-generated />
using System;
using DigitalCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalCore.Migrations
{
    [DbContext(typeof(DigitalCoreDB))]
    partial class DigitalCoreDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalCore.Models.Caracteristicas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Caracteristicas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Designacao = "Processador Intel i7 9700, 16GB RAM, Disco HDD 2TB, Grádica nVidia4GB, Windows10 Home"
                        },
                        new
                        {
                            ID = 2,
                            Designacao = "Processador Intel i5 7500, 8GB RAM, Disco HDD 1TB, Grádica nVidia2GB, Windows10 Home"
                        },
                        new
                        {
                            ID = 3,
                            Designacao = "Processador Intel i3 5700, 4GB RAM, Disco HDD 500GB, Grádica nVidia1GB, Windows10 Home"
                        },
                        new
                        {
                            ID = 4,
                            Designacao = "FULL HD 24pol. 1920x1080"
                        },
                        new
                        {
                            ID = 5,
                            Designacao = "HD 23pol. 1080x720"
                        },
                        new
                        {
                            ID = 6,
                            Designacao = "NVIDIA® GeForce® GTX 1060"
                        },
                        new
                        {
                            ID = 7,
                            Designacao = "3GB"
                        },
                        new
                        {
                            ID = 8,
                            Designacao = "512"
                        },
                        new
                        {
                            ID = 9,
                            Designacao = "240"
                        },
                        new
                        {
                            ID = 10,
                            Designacao = "120"
                        },
                        new
                        {
                            ID = 11,
                            Designacao = "Intel i5 8250U"
                        },
                        new
                        {
                            ID = 12,
                            Designacao = "Intel i5"
                        },
                        new
                        {
                            ID = 13,
                            Designacao = "2,40GHz"
                        },
                        new
                        {
                            ID = 14,
                            Designacao = "8GB"
                        },
                        new
                        {
                            ID = 15,
                            Designacao = "1TB"
                        },
                        new
                        {
                            ID = 16,
                            Designacao = "AMD Radeon 520"
                        },
                        new
                        {
                            ID = 17,
                            Designacao = "2GB"
                        },
                        new
                        {
                            ID = 18,
                            Designacao = "Intel i7 8700"
                        },
                        new
                        {
                            ID = 19,
                            Designacao = "Intel i5 8250U"
                        },
                        new
                        {
                            ID = 20,
                            Designacao = "Português 106 Teclas USB"
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.CaracteristicasProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaracteristicasFK")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CaracteristicasFK");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("CaracteristicasProduto");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CaracteristicasFK = 1,
                            ProdutoFK = 3,
                            Valor = "1699,00"
                        },
                        new
                        {
                            ID = 2,
                            CaracteristicasFK = 2,
                            ProdutoFK = 3,
                            Valor = "999,90"
                        },
                        new
                        {
                            ID = 3,
                            CaracteristicasFK = 3,
                            ProdutoFK = 3,
                            Valor = "698,90"
                        },
                        new
                        {
                            ID = 4,
                            CaracteristicasFK = 3,
                            ProdutoFK = 1,
                            Valor = "599,90"
                        },
                        new
                        {
                            ID = 5,
                            CaracteristicasFK = 4,
                            ProdutoFK = 2,
                            Valor = "249,90"
                        },
                        new
                        {
                            ID = 6,
                            CaracteristicasFK = 5,
                            ProdutoFK = 2,
                            Valor = "199,90"
                        },
                        new
                        {
                            ID = 7,
                            CaracteristicasFK = 6,
                            ProdutoFK = 7,
                            Valor = "89,00"
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CodPostal = "2300-243",
                            Email = "msousa@gmail.com",
                            Localidade = "Tomar",
                            Morada = "Rua do Comércio, Nº18",
                            NIF = "115347923",
                            Nome = "Miguel Sousa",
                            Password = "123",
                            Telefone = "249123456",
                            Username = "msousa"
                        },
                        new
                        {
                            ID = 2,
                            CodPostal = "2300-538",
                            Email = "pconceicao@yahoo.com",
                            Localidade = "Tomar",
                            Morada = "Rua João Torres, Nº94",
                            NIF = "115836783",
                            Nome = "Pedro Conceição",
                            Password = "213",
                            Telefone = "249765638",
                            Username = "pconceicaor"
                        },
                        new
                        {
                            ID = 3,
                            CodPostal = "2300-623",
                            Email = "misabel@sapo.pt",
                            Localidade = "Tomar",
                            Morada = "Praça do Bom Jardim, Nº25",
                            NIF = "102385734",
                            Nome = "Maria Isabel",
                            Password = "321",
                            Telefone = "249654321",
                            Username = "misabel"
                        },
                        new
                        {
                            ID = 4,
                            CodPostal = "2300-743",
                            Email = "jsilva@gmail.pt",
                            Localidade = "Tomar",
                            Morada = "Rua da Alcântara, Nº142",
                            NIF = "201482693",
                            Nome = "João Silva",
                            Password = "132",
                            Telefone = "249538247",
                            Username = "jsilva"
                        },
                        new
                        {
                            ID = 5,
                            CodPostal = "2300-235",
                            Email = "tpinheiro@hotmail.com",
                            Localidade = "Tomar",
                            Morada = "Rua D. Pedro, Nº11",
                            NIF = "159385395",
                            Nome = "Teresa Pinheiro",
                            Password = "312",
                            Telefone = "249823953",
                            Username = "tpinheiro"
                        },
                        new
                        {
                            ID = 6,
                            CodPostal = "2300-844",
                            Email = "msantos@sapo.pt",
                            Localidade = "Tomar",
                            Morada = "Rua Oliveira Gaio, Nº275",
                            NIF = "128573957",
                            Nome = "Marta Santos",
                            Password = "231",
                            Telefone = "249839258",
                            Username = "msantos"
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.Compra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteFK")
                        .HasColumnType("int");

                    b.Property<string>("CodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoradaEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteFK");

                    b.ToTable("Compra");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClienteFK = 1,
                            CodPostal = "2300-453",
                            DataCompra = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataEntrega = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoradaEntrega = "Rua Amorim Rosa, Nº213",
                            TipoPagamento = "Cartão de Crédito"
                        },
                        new
                        {
                            ID = 2,
                            ClienteFK = 3,
                            CodPostal = "2300-745",
                            DataCompra = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataEntrega = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoradaEntrega = "Av. Dr. Egas Moniz, Nº14",
                            TipoPagamento = "PayPal"
                        },
                        new
                        {
                            ID = 3,
                            ClienteFK = 6,
                            CodPostal = "2300-345",
                            DataCompra = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataEntrega = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoradaEntrega = "Rua 13 de Fevereiro, Nº28",
                            TipoPagamento = "Referência Multibanco"
                        },
                        new
                        {
                            ID = 4,
                            ClienteFK = 1,
                            CodPostal = "2300-856",
                            DataCompra = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataEntrega = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoradaEntrega = "Rua José Raimundo Rineiro, Nº54",
                            TipoPagamento = "Referência Multibanco"
                        },
                        new
                        {
                            ID = 5,
                            ClienteFK = 2,
                            CodPostal = "2300-185",
                            DataCompra = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataEntrega = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoradaEntrega = "Rua Serpa Pinto, Nº97",
                            TipoPagamento = "Transferência Bancária"
                        },
                        new
                        {
                            ID = 6,
                            ClienteFK = 4,
                            CodPostal = "2300-743",
                            DataCompra = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataEntrega = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoradaEntrega = "Rua da Alcântara, Nº142",
                            TipoPagamento = "Transferência Bancária"
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.Imagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("Imagem");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NomeImagem = "computador01-01.jpg",
                            ProdutoFK = 1
                        },
                        new
                        {
                            ID = 2,
                            NomeImagem = "computador01-02.jpg",
                            ProdutoFK = 1
                        },
                        new
                        {
                            ID = 3,
                            NomeImagem = "discossd01-01.jpg",
                            ProdutoFK = 2
                        },
                        new
                        {
                            ID = 4,
                            NomeImagem = "discossd01-02.jpg",
                            ProdutoFK = 2
                        },
                        new
                        {
                            ID = 5,
                            NomeImagem = "computador02-01.jpg",
                            ProdutoFK = 3
                        },
                        new
                        {
                            ID = 6,
                            NomeImagem = "computador02-02.jpg",
                            ProdutoFK = 3
                        },
                        new
                        {
                            ID = 7,
                            NomeImagem = "computador03-01.jpg",
                            ProdutoFK = 4
                        },
                        new
                        {
                            ID = 8,
                            NomeImagem = "computador03-02.jpg",
                            ProdutoFK = 4
                        },
                        new
                        {
                            ID = 9,
                            NomeImagem = "discossd02-01.jpg",
                            ProdutoFK = 5
                        },
                        new
                        {
                            ID = 10,
                            NomeImagem = "discossd02-02.jpg",
                            ProdutoFK = 5
                        },
                        new
                        {
                            ID = 11,
                            NomeImagem = "discossd03-01.jpg",
                            ProdutoFK = 6
                        },
                        new
                        {
                            ID = 12,
                            NomeImagem = "discossd03-02.jpg",
                            ProdutoFK = 6
                        },
                        new
                        {
                            ID = 13,
                            NomeImagem = "portatil01-01",
                            ProdutoFK = 7
                        },
                        new
                        {
                            ID = 14,
                            NomeImagem = "portatil01-02",
                            ProdutoFK = 7
                        },
                        new
                        {
                            ID = 15,
                            NomeImagem = "portatil02-01",
                            ProdutoFK = 8
                        },
                        new
                        {
                            ID = 16,
                            NomeImagem = "portatil02-02",
                            ProdutoFK = 8
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompraFK")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("IVA")
                        .HasColumnType("float");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("TipoProdutoFK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompraFK");

                    b.HasIndex("TipoProdutoFK");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompraFK = 1,
                            Descricao = "HP Omen 880-106Np",
                            IVA = 23.0,
                            Marca = "HP",
                            Modelo = "Omen 880",
                            NumSerie = "123456789",
                            Preco = 1200.0,
                            TipoProdutoFK = 1
                        },
                        new
                        {
                            ID = 2,
                            CompraFK = 1,
                            Descricao = "Toshiba TR200 3D TLC SATA III",
                            IVA = 23.0,
                            Marca = "Toshiba",
                            Modelo = "TR200",
                            NumSerie = "123456790",
                            Preco = 55.0,
                            TipoProdutoFK = 5
                        },
                        new
                        {
                            ID = 3,
                            CompraFK = 2,
                            Descricao = "Asus ROG GR8II-T022Z Auta",
                            IVA = 23.0,
                            Marca = "Asus",
                            Modelo = "ROG GR8II",
                            NumSerie = "123456791",
                            Preco = 950.0,
                            TipoProdutoFK = 1
                        },
                        new
                        {
                            ID = 4,
                            CompraFK = 3,
                            Descricao = "Asus D320MT",
                            IVA = 23.0,
                            Marca = "Asus",
                            Modelo = "D320MT",
                            NumSerie = "123456792",
                            Preco = 600.0,
                            TipoProdutoFK = 1
                        },
                        new
                        {
                            ID = 5,
                            CompraFK = 4,
                            Descricao = "Samsung 500GB EVO 850",
                            IVA = 23.0,
                            Marca = "Samsung",
                            Modelo = "EVO 850",
                            NumSerie = "123456793",
                            Preco = 125.0,
                            TipoProdutoFK = 5
                        },
                        new
                        {
                            ID = 6,
                            CompraFK = 5,
                            Descricao = "Kingston 120GB SSD A400 SATA III",
                            IVA = 23.0,
                            Marca = "Kingston",
                            Modelo = "A400",
                            NumSerie = "123456794",
                            Preco = 35.0,
                            TipoProdutoFK = 5
                        },
                        new
                        {
                            ID = 7,
                            CompraFK = 5,
                            Descricao = "HP 15-bs109np",
                            IVA = 23.0,
                            Marca = "HP",
                            Modelo = "bs109np",
                            NumSerie = "123456795",
                            Preco = 550.0,
                            TipoProdutoFK = 3
                        },
                        new
                        {
                            ID = 8,
                            CompraFK = 5,
                            Descricao = "Asus Zenbook UX430UA-78DHDCB1",
                            IVA = 23.0,
                            Marca = "Asus",
                            Modelo = "UX430UA",
                            NumSerie = "123456796",
                            Preco = 1200.0,
                            TipoProdutoFK = 3
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.TipoProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoProduto");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descricao = "Computador Desktop"
                        },
                        new
                        {
                            ID = 2,
                            Descricao = "Monitor"
                        },
                        new
                        {
                            ID = 3,
                            Descricao = "Portátil"
                        },
                        new
                        {
                            ID = 4,
                            Descricao = "Tablet"
                        },
                        new
                        {
                            ID = 5,
                            Descricao = "Disco"
                        },
                        new
                        {
                            ID = 6,
                            Descricao = "Memória RAM"
                        },
                        new
                        {
                            ID = 7,
                            Descricao = "Placa Gráfica"
                        },
                        new
                        {
                            ID = 8,
                            Descricao = "Impressora"
                        },
                        new
                        {
                            ID = 9,
                            Descricao = "Pen USB"
                        },
                        new
                        {
                            ID = 10,
                            Descricao = "Rato"
                        },
                        new
                        {
                            ID = 11,
                            Descricao = "Teclado"
                        },
                        new
                        {
                            ID = 12,
                            Descricao = "Processador"
                        });
                });

            modelBuilder.Entity("DigitalCore.Models.CaracteristicasProduto", b =>
                {
                    b.HasOne("DigitalCore.Models.Caracteristicas", "Caracteristicas")
                        .WithMany("ListaDeProdutosCaracteristicas")
                        .HasForeignKey("CaracteristicasFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalCore.Models.Produto", "Produto")
                        .WithMany("ListaDeCaracteristicasProduto")
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalCore.Models.Compra", b =>
                {
                    b.HasOne("DigitalCore.Models.Cliente", "Cliente")
                        .WithMany("ListaCompras")
                        .HasForeignKey("ClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalCore.Models.Imagem", b =>
                {
                    b.HasOne("DigitalCore.Models.Produto", "Produto")
                        .WithMany("ListaDeImagensdeUmProduto")
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalCore.Models.Produto", b =>
                {
                    b.HasOne("DigitalCore.Models.Compra", "Compra")
                        .WithMany("ListaDeProdutosComprados")
                        .HasForeignKey("CompraFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalCore.Models.TipoProduto", "TipoProduto")
                        .WithMany("ListaDeProdutos")
                        .HasForeignKey("TipoProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
