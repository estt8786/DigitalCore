// <auto-generated />
using System;
using DigitalCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalCore.Migrations
{
    [DbContext(typeof(DigitalCoreDB))]
    [Migration("20200502120656_novaMigrationCommit")]
    partial class novaMigrationCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalCore.Models.Caracteristicas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoProdutoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipoProdutoID");

                    b.ToTable("Caracteristicas");
                });

            modelBuilder.Entity("DigitalCore.Models.CaracteristicasProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaracteristicasFK")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CaracteristicasFK");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("CaracteristicasProduto");
                });

            modelBuilder.Entity("DigitalCore.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DigitalCore.Models.Compra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteFK")
                        .HasColumnType("int");

                    b.Property<string>("CodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoradaEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteFK");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("DigitalCore.Models.Imagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("DigitalCore.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompraFK")
                        .HasColumnType("int");

                    b.Property<string>("Descrição")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("IVA")
                        .HasColumnType("float");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("TipoProdutoFK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompraFK");

                    b.HasIndex("TipoProdutoFK");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("DigitalCore.Models.TipoProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoProduto");
                });

            modelBuilder.Entity("DigitalCore.Models.Caracteristicas", b =>
                {
                    b.HasOne("DigitalCore.Models.TipoProduto", null)
                        .WithMany("ListaDeCaracteristicas")
                        .HasForeignKey("TipoProdutoID");
                });

            modelBuilder.Entity("DigitalCore.Models.CaracteristicasProduto", b =>
                {
                    b.HasOne("DigitalCore.Models.Caracteristicas", "Caracteristicas")
                        .WithMany("ListaDeProdutosCaracteristicas")
                        .HasForeignKey("CaracteristicasFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalCore.Models.Produto", "Produto")
                        .WithMany("ListaDeCaracteristicasProduto")
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalCore.Models.Compra", b =>
                {
                    b.HasOne("DigitalCore.Models.Cliente", "Cliente")
                        .WithMany("ListaCompras")
                        .HasForeignKey("ClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalCore.Models.Imagem", b =>
                {
                    b.HasOne("DigitalCore.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalCore.Models.Produto", b =>
                {
                    b.HasOne("DigitalCore.Models.Compra", "Compra")
                        .WithMany("ListaDeProdutosComprados")
                        .HasForeignKey("CompraFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalCore.Models.TipoProduto", "TipoProduto")
                        .WithMany("ListaDeProdutos")
                        .HasForeignKey("TipoProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
